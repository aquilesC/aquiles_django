# Generated by Django 5.2.5 on 2025-08-20 17:05

import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('blog', '0001_initial'),
        ('wagtailcore', '0095_groupsitepermission'),
        ('wagtailimages', '0027_image_description'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Introduction text for the blog')),
                ('posts_per_page', models.IntegerField(default=10, help_text='Number of posts per page')),
            ],
            options={
                'verbose_name': 'Blog Index Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ContactPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Introduction text for the contact page')),
                ('contact_form_title', models.CharField(default='Get in Touch', max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('social_links', wagtail.fields.StreamField([('social_link', 3)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 50}), 1: ('wagtail.blocks.URLBlock', (), {}), 2: ('wagtail.blocks.CharBlock', (), {'help_text': 'Icon class or name', 'max_length': 50}), 3: ('wagtail.blocks.StructBlock', [[('platform', 0), ('url', 1), ('icon', 2)]], {})})),
            ],
            options={
                'verbose_name': 'Contact Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='LegalPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('content', wagtail.fields.RichTextField(help_text='Legal content')),
                ('last_updated', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Legal Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ProjectIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Introduction text for the projects section')),
                ('projects_per_page', models.IntegerField(default=12, help_text='Number of projects per page')),
            ],
            options={
                'verbose_name': 'Project Index Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Aquiles Personal Website', max_length=100)),
                ('site_description', models.TextField(blank=True)),
                ('site_keywords', models.CharField(blank=True, max_length=500)),
                ('twitter_handle', models.CharField(blank=True, max_length=50)),
                ('github_username', models.CharField(blank=True, max_length=50)),
                ('linkedin_url', models.URLField(blank=True)),
                ('google_analytics_id', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'verbose_name': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='ProjectPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('summary', models.CharField(help_text='Brief summary of the project', max_length=500)),
                ('description', wagtail.fields.RichTextField(help_text='Detailed project description')),
                ('tech_stack', wagtail.fields.StreamField([('tech_item', 0)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 100})}, help_text='Technologies used in the project')),
                ('project_url', models.URLField(blank=True, help_text='Link to the live project')),
                ('github_url', models.URLField(blank=True, help_text='Link to the GitHub repository')),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('on_hold', 'On Hold')], default='completed', max_length=20)),
                ('is_members_only', models.BooleanField(default=False, help_text='Make this project members-only')),
                ('featured_image', models.ForeignKey(blank=True, help_text='Featured image for the project', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Project',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero_title', models.CharField(blank=True, help_text='Main hero title', max_length=200)),
                ('hero_subtitle', models.CharField(blank=True, help_text='Hero subtitle text', max_length=500)),
                ('about_title', models.CharField(blank=True, default='About Me', max_length=200)),
                ('about_content', wagtail.fields.RichTextField(blank=True, help_text='About section content')),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('social_links', wagtail.fields.StreamField([('social_link', 3)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 50}), 1: ('wagtail.blocks.URLBlock', (), {}), 2: ('wagtail.blocks.CharBlock', (), {'help_text': 'Icon class or name', 'max_length': 50}), 3: ('wagtail.blocks.StructBlock', [[('platform', 0), ('url', 1), ('icon', 2)]], {})})),
                ('featured_blog_posts', models.ManyToManyField(blank=True, help_text='Select blog posts to feature on the home page', related_name='featured_on_home', to='blog.blogpage')),
                ('hero_image', models.ForeignKey(blank=True, help_text='Hero background image', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('featured_projects', models.ManyToManyField(blank=True, help_text='Select projects to feature on the home page', related_name='featured_on_home', to='pages.projectpage')),
            ],
            options={
                'verbose_name': 'Home Page',
            },
            bases=('wagtailcore.page',),
        ),
    ]
